<span class="hljs-variable">masterchain_block_extra</span><span class="hljs-symbol">#cca5</span>
  <span class="hljs-variable">key_block</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">#</span><span class="hljs-symbol">#</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span>
  <span class="hljs-variable">shard_hashes</span><span class="hljs-punctuation">:</span><span class="hljs-variable">ShardHashes</span>
  <span class="hljs-variable">shard_fees</span><span class="hljs-punctuation">:</span><span class="hljs-variable">ShardFees</span>
  <span class="hljs-operator">^</span><span class="hljs-punctuation">[</span> <span class="hljs-variable">prev_blk_signatures</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">(</span><span class="hljs-variable">HashmapE</span> <span class="hljs-number">16</span> <span class="hljs-variable">CryptoSignaturePair</span><span class="hljs-punctuation">)</span>
     <span class="hljs-variable">recover_create_msg</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">(</span><span class="hljs-variable">Maybe</span> <span class="hljs-operator">^</span><span class="hljs-variable">InMsg</span><span class="hljs-punctuation">)</span>
     <span class="hljs-variable">mint_msg</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">(</span><span class="hljs-variable">Maybe</span> <span class="hljs-operator">^</span><span class="hljs-variable">InMsg</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">]</span>
  <span class="hljs-variable">config</span><span class="hljs-punctuation">:</span><span class="hljs-variable">key_block</span><span class="hljs-operator">?</span><span class="hljs-variable">ConfigParams</span>
<span class="hljs-operator">=</span> <span class="hljs-type">McBlockExtra</span>;


<span class="hljs-variable">chain_empty</span><span class="hljs-symbol">$_</span> <span class="hljs-operator">=</span> <span class="hljs-type">ProofChain</span> <span class="hljs-number">0</span><span class="hljs-punctuation">;</span>
<span class="hljs-variable">chain_link</span><span class="hljs-symbol">$_</span> <span class="hljs-punctuation">{</span><span class="hljs-variable">n</span><span class="hljs-punctuation">:</span><span class="hljs-symbol">#</span><span class="hljs-punctuation">}</span> <span class="hljs-variable">root</span><span class="hljs-punctuation">:</span><span class="hljs-operator">^</span><span class="hljs-variable">Cell</span> <span class="hljs-variable">prev</span><span class="hljs-punctuation">:</span><span class="hljs-variable">n</span><span class="hljs-operator">?</span><span class="hljs-operator">^</span><span class="hljs-punctuation">(</span><span class="hljs-variable">ProofChain</span> <span class="hljs-variable">n</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-type">ProofChain</span> <span class="hljs-punctuation">(</span><span class="hljs-variable">n</span> <span class="hljs-operator">+</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">;</span>
<span class="hljs-variable">top_block_descr</span><span class="hljs-symbol">#d5</span> <span class="hljs-variable">proof_for</span><span class="hljs-punctuation">:</span><span class="hljs-variable">BlockIdExt</span> <span class="hljs-variable">signatures</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">(</span><span class="hljs-variable">Maybe</span> <span class="hljs-operator">^</span><span class="hljs-variable">BlockSignatures</span><span class="hljs-punctuation">)</span>
  <span class="hljs-variable">len</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">(</span><span class="hljs-symbol">#</span><span class="hljs-symbol">#</span> <span class="hljs-number">8</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">{</span> <span class="hljs-variable">len</span> <span class="hljs-operator">&gt;=</span> <span class="hljs-number">1</span> <span class="hljs-punctuation">}</span> <span class="hljs-punctuation">{</span> <span class="hljs-variable">len</span> <span class="hljs-operator">&lt;=</span> <span class="hljs-number">8</span> <span class="hljs-punctuation">}</span> <span class="hljs-variable">chain</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">(</span><span class="hljs-variable">ProofChain</span> <span class="hljs-variable">len</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">=</span> <span class="hljs-type">TopBlockDescr</span>;
